<?php
/**
 * Created by PhpStorm.
 * User: leila
 * Date: 09/05/2019
 * Time: 15:28
 */

require_once 'BaseController.php';
require_once __DIR__.'/SecureBaseController.php';
require_once __DIR__.'/../models/ProductModel.php';

class ProductsController extends SecureBaseController
{
    function __construct(){
        parent::__construct();
        $this->model = new ProductModel();
    }

    function get(){

        if(isset($_GET['method'])){
            $this->method();
        }else if($this->validateId()){
            $entity = $this->getModel()->findById($_GET['id']);
            if(!empty($entity)){
                $this->returnSuccess(200,$entity);
            }else{
                $this->returnError(404,"ENTITY NOT FOUND");
            }

        }else{
           // $this->returnSuccess(200,$this->getModel()->findAllByDesc($this->getFilters(),$this->getPaginator()));
            $this->returnSuccess(200,$this->assignFilter());
        }
    }

    public function getFilters()
    {
        $filters = parent::getFilters(); // TODO: Change the autogenerated stub
        if(isset($_GET['query']) && !empty($_GET['query'])){

            //que contenga la query
            $filters[] = 'desart like "%'.$_GET['query'].'%"';
            //que contenga y empiece
           // $filters[] = 'desart like "'.$_GET['query'].'%" OR desart like "%'.$_GET['query'].'%"';

        }
        return $filters;
    }

    public function getFiltersContain()
    {
        $filters = parent::getFilters(); // TODO: Change the autogenerated stub
        if(isset($_GET['query']) && !empty($_GET['query'])){
            $filters[] = 'desart like "%'.$_GET['query'].'%"';
        }
        return $filters;
    }

    public function getFiltersFirstLetter()
    {
        $filters = parent::getFilters(); // TODO: Change the autogenerated stub
        if(isset($_GET['query']) && !empty($_GET['query'])){
            $filters[] = 'desart like "'.$_GET['query'].'%"';
        }
        return $filters;
    }

    public function assignFilter(){
        $res=$this->getModel()->findAllByDesc($this->getFiltersFirstLetter(),$this->getPaginator());
        $resContain=$this->getModel()->findAllByDesc($this->getFiltersContain(),$this->getPaginator());

        return $res+$resContain;
    }
}